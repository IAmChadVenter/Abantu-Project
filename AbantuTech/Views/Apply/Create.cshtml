@model Abantu_System.Models.AbantuMember

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<link href="~/Content/JQueryIU/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/JQueryIU/jquery-ui.theme.min.css" rel="stylesheet" />
<br />
<br />
<br />
<style>
    img {
        display: block;
        margin: auto;
    }
</style>
<img src="~/Content/Template/images/5.jpg" height="110" width="110" />
<h1><p align="center">Apply</p></h1>
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Surname" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter first name" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

    @*@Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })*@

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @{
                    List<SelectListItem> gender = new List<SelectListItem>();
                    gender.Add(new SelectListItem { Text = "Female", Value = "Female" });
                    gender.Add(new SelectListItem { Text = "Male", Value = "Male" });

                }
                @Html.DropDownListFor(model => model.Gender, gender, "Select Gender...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter phone number" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter city" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter province" } })
                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter zip code" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @{
                    List<SelectListItem> types = new List<SelectListItem>();
                    types.Add(new SelectListItem { Text = "Intern", Value = "Intern" });
                    types.Add(new SelectListItem { Text = "Volunteer", Value = "Volunteer" });
                    types.Add(new SelectListItem { Text = "Staff", Value = "Staff" });
                }
                @Html.DropDownListFor(model => model.Type, types, "Select Type...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class="control-label col-md-2">Branch</label>
            @*@Html.Label("Branch", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-5">
                @Html.DropDownList("Branch_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Branch_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Committee_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Committee_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Committee_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Next" class="btn btn-default" /> or 
                @*<input type="button" value="Download Application Form" class="btn btn-default" onclick="window.open('~/Content/PDF/YMCA Application Form.pdf');"/>*@

                <a class="btn btn-default" target="_blank" href="~/Content/PDF/YMCA Application Form.pdf">Download Application Form</a>            
    @*@Html.ActionLink("Download Form", "Download", "Files", new { id = 4 }, new { @class = "btn btn-primary" })*@
            </div>
        </div>
    </div>
                    }
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery-ui.min.js"></script>
<script>
        $('#DateOfBirth').datepicker();
</script>
