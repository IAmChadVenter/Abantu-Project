@model HelpDeskIntegration.Models.EditTicketDynamicModel
@{
    ViewBag.Title = "EditTicketView";
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<style>
    .hide {
        display: none;
    }
</style>
<div class="container">
    <div class="container-fluid">
        <div class="page-header">
            <h4>
                @ViewBag.Title
            </h4>
                <div class="pull-right"><p> @Html.ActionLink("Ticket List", "Index", "HelpDesk") </p></div>
            
        </div>
        <div class="panel panel-default">
            <div class="panel-heading" role="tab"> Edit Ticket</div>
            <div class="panel-body">

                @using (Html.BeginForm("Edit", "HelpDesk", new { ReturnUrl = ViewBag.ReturnUrl, isAutho = ViewBag.isAutho }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="col-md-2 control-label">Issue No</label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Issue_No, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Reporter </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Reporter, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Status </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Status, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Project </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Project, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Summary </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Summary, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Created </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Created, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Updated </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Updated, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Description </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2" for="Filename">Filename</label>
                            <div class="col-md-10">
                                <div>
                                    <input type="file" name="browserHidden" class="file btn btn-default" id="browserHidden" multiple />
                                </div>
                            </div>
                        </div>
                        @for (int i = 0; i < Model.ComplexCustomVariables.Count; i++)
                        {
                            string cssclassdata = "";
                            <div class="form-group col-md-12">
                                @if (Model.ComplexCustomVariables[i].ControlType == "textbox")
                                {
                                    var TempTextBox = Model.ComplexCustomVariables[i].MyProperty as HelpDeskIntegration.Models.CustomTextbox;
                                    if (!TempTextBox.IsToShowCustomField)
                                    {
                                        cssclassdata = "hide";
                                    }
                                    <label class="control-label col-md-2 @cssclassdata">@TempTextBox.LabelName</label>
                                    <div class="col-md-10 @cssclassdata">
                                        @Html.TextBox(TempTextBox.CustomVariableKey, TempTextBox.CustomVariableValue, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                }
                                else if (Model.ComplexCustomVariables[i].ControlType == "dropdown")
                                {
                                    var DropDown = (Model.ComplexCustomVariables[i].MyProperty as HelpDeskIntegration.Models.CustomDropDown);
                                    if (!DropDown.IsToShowCustomField)
                                    {
                                        cssclassdata = "hide";
                                    }
                                    var optionData = DropDown.CustomVarOptions;
                                    <label class="control-label col-md-2 @cssclassdata">@DropDown.LabelName</label>
                                    <div class="col-md-10 @cssclassdata">
                                        @Html.DropDownList(DropDown.CustomVariableKey, optionData, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                }
                                else if (Model.ComplexCustomVariables[i].ControlType == "multidropdown")
                                {
                                    var DropDown = (Model.ComplexCustomVariables[i].MyProperty as HelpDeskIntegration.Models.CustomDropDown);
                                    if (!DropDown.IsToShowCustomField)
                                    {
                                        cssclassdata = "hide";
                                    }
                                    var optionData = DropDown.CustomVarOptions;
                                    <label class="control-label col-md-2 @cssclassdata">@DropDown.LabelName</label>
                                    <div class="col-md-10 @cssclassdata">
                                        @Html.DropDownList(DropDown.CustomVariableKey, optionData, new { Multiple = "multiple", @class = "form-control", @disabled = "disabled" })
                                    </div>
                                }
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-custom" />
                            </div>
                        </div>
                    </div>
                    @Html.Action("GetIssueComment", "HelpDesk", new { @IssueID = Model.Issue_No })
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <link href="~/Content/SimpleCommentHistory.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.validate.min.js"></script>
}


